export default HttpStatusCode;
declare namespace HttpStatusCode {
    let Continue: number;
    let SwitchingProtocols: number;
    let Processing: number;
    let EarlyHints: number;
    let Ok: number;
    let Created: number;
    let Accepted: number;
    let NonAuthoritativeInformation: number;
    let NoContent: number;
    let ResetContent: number;
    let PartialContent: number;
    let MultiStatus: number;
    let AlreadyReported: number;
    let ImUsed: number;
    let MultipleChoices: number;
    let MovedPermanently: number;
    let Found: number;
    let SeeOther: number;
    let NotModified: number;
    let UseProxy: number;
    let Unused: number;
    let TemporaryRedirect: number;
    let PermanentRedirect: number;
    let BadRequest: number;
    let Unauthorized: number;
    let PaymentRequired: number;
    let Forbidden: number;
    let NotFound: number;
    let MethodNotAllowed: number;
    let NotAcceptable: number;
    let ProxyAuthenticationRequired: number;
    let RequestTimeout: number;
    let Conflict: number;
    let Gone: number;
    let LengthRequired: number;
    let PreconditionFailed: number;
    let PayloadTooLarge: number;
    let UriTooLong: number;
    let UnsupportedMediaType: number;
    let RangeNotSatisfiable: number;
    let ExpectationFailed: number;
    let ImATeapot: number;
    let MisdirectedRequest: number;
    let UnprocessableEntity: number;
    let Locked: number;
    let FailedDependency: number;
    let TooEarly: number;
    let UpgradeRequired: number;
    let PreconditionRequired: number;
    let TooManyRequests: number;
    let RequestHeaderFieldsTooLarge: number;
    let UnavailableForLegalReasons: number;
    let InternalServerError: number;
    let NotImplemented: number;
    let BadGateway: number;
    let ServiceUnavailable: number;
    let GatewayTimeout: number;
    let HttpVersionNotSupported: number;
    let VariantAlsoNegotiates: number;
    let InsufficientStorage: number;
    let LoopDetected: number;
    let NotExtended: number;
    let NetworkAuthenticationRequired: number;
}
