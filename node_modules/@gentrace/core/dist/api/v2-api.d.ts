/**
 * Gentrace API
 * These API routes are designed to ingest events from clients.
 *
 * The version of the OpenAPI document: 0.22.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from "../configuration";
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { RequestArgs, BaseAPI } from "../base";
import { FilterableMetadataInputValue } from "../models";
import { SearchableStringInput } from "../models";
import { SearchableUnixSecondsInput } from "../models";
import { V2PipelinesGet200Response } from "../models";
import { V2TestCasesGet200Response } from "../models";
import { V2TestResultsGet200Response } from "../models";
/**
 * V2Api - axios parameter creator
 * @export
 */
export declare const V2ApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get pipelines, optionally filtered by label
     * @param {string} [label] The label to filter pipelines by
     * @param {SearchableStringInput} [slug] The slug to filter pipelines by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2PipelinesGet: (label?: string, slug?: SearchableStringInput, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get test cases for a pipeline
     * @param {string} [pipelineId] The ID of the Pipeline to retrieve test cases for
     * @param {string} [pipelineSlug] The slug of the Pipeline to retrieve test cases for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2TestCasesGet: (pipelineId?: string, pipelineSlug?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get test results for a pipeline
     * @param {string} [pipelineId] The ID of the pipeline
     * @param {string} [pipelineSlug] The slug of the pipeline
     * @param {SearchableUnixSecondsInput} [createdAt] Criteria to search by creation date
     * @param {{ [key: string]: FilterableMetadataInputValue; }} [metadata] Criteria to search by metadata
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2TestResultsGet: (pipelineId?: string, pipelineSlug?: string, createdAt?: SearchableUnixSecondsInput, metadata?: {
        [key: string]: FilterableMetadataInputValue;
    }, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * V2Api - functional programming interface
 * @export
 */
export declare const V2ApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get pipelines, optionally filtered by label
     * @param {string} [label] The label to filter pipelines by
     * @param {SearchableStringInput} [slug] The slug to filter pipelines by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2PipelinesGet(label?: string, slug?: SearchableStringInput, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<V2PipelinesGet200Response>>;
    /**
     *
     * @summary Get test cases for a pipeline
     * @param {string} [pipelineId] The ID of the Pipeline to retrieve test cases for
     * @param {string} [pipelineSlug] The slug of the Pipeline to retrieve test cases for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2TestCasesGet(pipelineId?: string, pipelineSlug?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<V2TestCasesGet200Response>>;
    /**
     *
     * @summary Get test results for a pipeline
     * @param {string} [pipelineId] The ID of the pipeline
     * @param {string} [pipelineSlug] The slug of the pipeline
     * @param {SearchableUnixSecondsInput} [createdAt] Criteria to search by creation date
     * @param {{ [key: string]: FilterableMetadataInputValue; }} [metadata] Criteria to search by metadata
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2TestResultsGet(pipelineId?: string, pipelineSlug?: string, createdAt?: SearchableUnixSecondsInput, metadata?: {
        [key: string]: FilterableMetadataInputValue;
    }, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<V2TestResultsGet200Response>>;
};
/**
 * V2Api - factory interface
 * @export
 */
export declare const V2ApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get pipelines, optionally filtered by label
     * @param {string} [label] The label to filter pipelines by
     * @param {SearchableStringInput} [slug] The slug to filter pipelines by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2PipelinesGet(label?: string, slug?: SearchableStringInput, options?: any): AxiosPromise<V2PipelinesGet200Response>;
    /**
     *
     * @summary Get test cases for a pipeline
     * @param {string} [pipelineId] The ID of the Pipeline to retrieve test cases for
     * @param {string} [pipelineSlug] The slug of the Pipeline to retrieve test cases for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2TestCasesGet(pipelineId?: string, pipelineSlug?: string, options?: any): AxiosPromise<V2TestCasesGet200Response>;
    /**
     *
     * @summary Get test results for a pipeline
     * @param {string} [pipelineId] The ID of the pipeline
     * @param {string} [pipelineSlug] The slug of the pipeline
     * @param {SearchableUnixSecondsInput} [createdAt] Criteria to search by creation date
     * @param {{ [key: string]: FilterableMetadataInputValue; }} [metadata] Criteria to search by metadata
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v2TestResultsGet(pipelineId?: string, pipelineSlug?: string, createdAt?: SearchableUnixSecondsInput, metadata?: {
        [key: string]: FilterableMetadataInputValue;
    }, options?: any): AxiosPromise<V2TestResultsGet200Response>;
};
/**
 * V2Api - object-oriented interface
 * @export
 * @class V2Api
 * @extends {BaseAPI}
 */
export declare class V2Api extends BaseAPI {
    /**
     *
     * @summary Get pipelines, optionally filtered by label
     * @param {string} [label] The label to filter pipelines by
     * @param {SearchableStringInput} [slug] The slug to filter pipelines by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof V2Api
     */
    v2PipelinesGet(label?: string, slug?: SearchableStringInput, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<V2PipelinesGet200Response, any>>;
    /**
     *
     * @summary Get test cases for a pipeline
     * @param {string} [pipelineId] The ID of the Pipeline to retrieve test cases for
     * @param {string} [pipelineSlug] The slug of the Pipeline to retrieve test cases for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof V2Api
     */
    v2TestCasesGet(pipelineId?: string, pipelineSlug?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<V2TestCasesGet200Response, any>>;
    /**
     *
     * @summary Get test results for a pipeline
     * @param {string} [pipelineId] The ID of the pipeline
     * @param {string} [pipelineSlug] The slug of the pipeline
     * @param {SearchableUnixSecondsInput} [createdAt] Criteria to search by creation date
     * @param {{ [key: string]: FilterableMetadataInputValue; }} [metadata] Criteria to search by metadata
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof V2Api
     */
    v2TestResultsGet(pipelineId?: string, pipelineSlug?: string, createdAt?: SearchableUnixSecondsInput, metadata?: {
        [key: string]: FilterableMetadataInputValue;
    }, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<V2TestResultsGet200Response, any>>;
}
