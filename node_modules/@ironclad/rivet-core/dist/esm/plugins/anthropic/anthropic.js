import fetchEventSource from './fetchEventSource.js';
export const anthropicModels = {
    'claude-instant-1': {
        maxTokens: 100000,
        cost: {
            prompt: 0.00163,
            completion: 0.00551,
        },
        displayName: 'Claude Instant',
    },
    'claude-2': {
        maxTokens: 100000,
        cost: {
            prompt: 0.01102,
            completion: 0.03268,
        },
        displayName: 'Claude 2',
    },
};
export const anthropicModelOptions = Object.entries(anthropicModels).map(([id, { displayName }]) => ({
    value: id,
    label: displayName,
}));
export async function* streamChatCompletions({ apiKey, signal, ...rest }) {
    const defaultSignal = new AbortController().signal;
    const response = await fetchEventSource('https://api.anthropic.com/v1/complete', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'x-api-key': apiKey,
            'anthropic-version': '2023-06-01',
        },
        body: JSON.stringify({
            ...rest,
            stream: true,
        }),
        signal: signal ?? defaultSignal,
    });
    let hadChunks = false;
    let nextDataType;
    for await (const chunk of response.events()) {
        hadChunks = true;
        if (chunk === '[DONE]') {
            return;
        }
        else if (/\[\w+\]/.test(chunk)) {
            nextDataType = chunk.slice(1, -1);
            continue;
        }
        let data;
        try {
            data = JSON.parse(chunk);
        }
        catch (err) {
            console.error('JSON parse failed on chunk: ', chunk);
            throw err;
        }
        yield data;
    }
    if (!hadChunks) {
        const responseJson = await response.json();
        throw new Error(`No chunks received. Response: ${JSON.stringify(responseJson)}`);
    }
}
