import { coerceTypeOptional } from './coerceType.js';
import { entries } from './typeSafety.js';
export function getInputOrData(data, inputs, inputAndDataKey, type, useInputToggleDataKey) {
    if (!useInputToggleDataKey) {
        const capitalized = inputAndDataKey[0].toUpperCase() + inputAndDataKey.slice(1);
        const key = `use${capitalized}Input`;
        useInputToggleDataKey = key;
    }
    const value = data[useInputToggleDataKey] && inputs[inputAndDataKey] != null
        ? coerceTypeOptional(inputs[inputAndDataKey], type ?? 'string') ?? data[inputAndDataKey]
        : data[inputAndDataKey];
    return value;
}
export function cleanHeaders(headers) {
    return Object.fromEntries(entries(headers).filter(([key]) => key.trim()));
}
