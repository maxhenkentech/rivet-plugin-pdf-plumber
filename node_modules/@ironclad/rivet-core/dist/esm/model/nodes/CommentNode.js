import {} from '../NodeBase.js';
import { nanoid } from 'nanoid/non-secure';
import { NodeImpl } from '../NodeImpl.js';
import {} from '../DataValue.js';
import { dedent } from 'ts-dedent';
import {} from '../EditorDefinition.js';
import { nodeDefinition } from '../NodeDefinition.js';
export class CommentNodeImpl extends NodeImpl {
    static create() {
        const chartNode = {
            type: 'comment',
            title: 'Comment',
            id: nanoid(),
            visualData: {
                x: 0,
                y: 0,
                width: 600,
            },
            data: {
                text: '',
                height: 600,
                color: 'rgba(255,255,255,1)',
                backgroundColor: 'rgba(0,0,0,0.05)',
            },
        };
        return chartNode;
    }
    getInputDefinitions() {
        return [];
    }
    getOutputDefinitions() {
        return [];
    }
    getEditors() {
        return [
            {
                type: 'color',
                label: 'Color',
                dataKey: 'color',
            },
            {
                type: 'color',
                label: 'Background Color',
                dataKey: 'backgroundColor',
            },
            {
                type: 'code',
                label: 'Text',
                dataKey: 'text',
                language: 'markdown',
                theme: 'vs-dark',
            },
        ];
    }
    static getUIData() {
        return {
            infoBoxBody: dedent `
        A comment node is a node that does nothing. It is useful for adding notes to a graph.
      `,
            infoBoxTitle: 'Comment Node',
            contextMenuTitle: 'Comment',
            group: ['Advanced'],
        };
    }
    async process() {
        return {};
    }
}
export const commentNode = nodeDefinition(CommentNodeImpl, 'Comment');
