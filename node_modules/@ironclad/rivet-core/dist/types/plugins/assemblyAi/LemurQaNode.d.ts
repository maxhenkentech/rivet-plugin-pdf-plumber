import { type ChartNode, type EditorDefinition, type Inputs, type InternalProcessContext, type NodeInputDefinition, type NodeOutputDefinition, type NodeUIData, type Outputs } from '../../index.js';
import { type LemurNodeData } from './lemurHelpers.js';
export type LemurQaNode = ChartNode<'assemblyAiLemurQa', LemurQaNodeData>;
export type LemurQaNodeData = LemurNodeData & {
    questions_answer_format?: string;
    questions_context?: string;
    questions_answer_options?: string;
};
export declare const LemurQaNodeImpl: {
    create(): LemurQaNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    getEditors(): EditorDefinition<LemurQaNode>[];
    getBody(): string | undefined;
    getUIData(): NodeUIData;
    process(data: LemurNodeData & {
        questions_answer_format?: string | undefined;
        questions_context?: string | undefined;
        questions_answer_options?: string | undefined;
    }, inputs: Inputs, context: InternalProcessContext): Promise<Outputs>;
};
export declare const lemurQaNode: import("../../index.js").PluginNodeDefinition<LemurQaNode>;
