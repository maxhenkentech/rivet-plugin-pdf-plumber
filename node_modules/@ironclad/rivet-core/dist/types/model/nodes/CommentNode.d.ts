import { type ChartNode, type NodeInputDefinition, type NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, type NodeUIData } from '../NodeImpl.js';
import { type DataValue } from '../DataValue.js';
import { type EditorDefinition } from '../EditorDefinition.js';
export type CommentNode = ChartNode<'comment', CommentNodeData>;
export type CommentNodeData = {
    text: string;
    color?: string;
    backgroundColor?: string;
    height: number;
};
export declare class CommentNodeImpl extends NodeImpl<CommentNode> {
    static create(): CommentNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    getEditors(): EditorDefinition<CommentNode>[];
    static getUIData(): NodeUIData;
    process(): Promise<Record<string, DataValue>>;
}
export declare const commentNode: import("../NodeDefinition.js").NodeDefinition<CommentNode>;
