import type { ChartNode, DatasetId, Inputs, InternalProcessContext, NodeInputDefinition, NodeOutputDefinition, NodeUIData, Outputs, EditorDefinition } from '../../index.js';
import { NodeImpl } from '../NodeImpl.js';
export type GetDatasetRowNode = ChartNode<'getDatasetRow', GetDatasetRowNodeData>;
type GetDatasetRowNodeData = {
    datasetId: DatasetId;
    useDatasetIdInput?: boolean;
    rowId: string;
    useRowIdInput?: boolean;
};
export declare class GetDatasetRowNodeImpl extends NodeImpl<GetDatasetRowNode> {
    static create(): GetDatasetRowNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    getEditors(): EditorDefinition<GetDatasetRowNode>[] | Promise<EditorDefinition<GetDatasetRowNode>[]>;
    process(inputs: Inputs, context: InternalProcessContext): Promise<Outputs>;
}
export declare const getDatasetRowNode: import("../NodeDefinition.js").NodeDefinition<GetDatasetRowNode>;
export {};
