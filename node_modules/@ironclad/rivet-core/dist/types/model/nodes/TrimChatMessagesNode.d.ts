import { type ChartNode, type NodeInputDefinition, type NodeOutputDefinition } from '../../model/NodeBase.js';
import { NodeImpl, type NodeUIData } from '../../model/NodeImpl.js';
import { type EditorDefinition, type Inputs, type InternalProcessContext, type NodeBodySpec, type Outputs } from '../../index.js';
export type TrimChatMessagesNodeData = {
    maxTokenCount: number;
    useMaxTokenCountInput?: boolean;
    removeFromBeginning: boolean;
    useRemoveFromBeginningInput?: boolean;
};
export type TrimChatMessagesNode = ChartNode<'trimChatMessages', TrimChatMessagesNodeData>;
export declare class TrimChatMessagesNodeImpl extends NodeImpl<TrimChatMessagesNode> {
    static create(): TrimChatMessagesNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    getEditors(): EditorDefinition<TrimChatMessagesNode>[];
    getBody(): string | NodeBodySpec | undefined;
    static getUIData(): NodeUIData;
    process(inputs: Inputs, context: InternalProcessContext<TrimChatMessagesNode>): Promise<Outputs>;
}
export declare const trimChatMessagesNode: import("../NodeDefinition.js").NodeDefinition<TrimChatMessagesNode>;
