import type { ChartNode, DatasetId, Inputs, InternalProcessContext, NodeInputDefinition, NodeOutputDefinition, NodeUIData, Outputs, EditorDefinition } from '../../index.js';
import { NodeImpl } from '../NodeImpl.js';
export type DatasetNearestNeighborsNode = ChartNode<'datasetNearestNeighbors', DatasetNearestNeighborsNodeData>;
type DatasetNearestNeighborsNodeData = {
    datasetId: DatasetId;
    useDatasetIdInput?: boolean;
    k: number;
    useKInput?: boolean;
};
export declare class DatasetNearestNeighborsNodeImpl extends NodeImpl<DatasetNearestNeighborsNode> {
    static create(): DatasetNearestNeighborsNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    getEditors(): EditorDefinition<DatasetNearestNeighborsNode>[];
    process(inputs: Inputs, context: InternalProcessContext): Promise<Outputs>;
}
export declare const datasetNearestNeighborsNode: import("../NodeDefinition.js").NodeDefinition<DatasetNearestNeighborsNode>;
export {};
