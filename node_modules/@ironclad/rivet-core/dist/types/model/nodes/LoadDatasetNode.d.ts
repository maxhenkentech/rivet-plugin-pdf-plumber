import type { ChartNode, DatasetId, Inputs, InternalProcessContext, NodeInputDefinition, NodeOutputDefinition, NodeUIData, Outputs, EditorDefinition } from '../../index.js';
import { NodeImpl } from '../NodeImpl.js';
export type LoadDatasetNode = ChartNode<'loadDataset', LoadDatasetNodeData>;
type LoadDatasetNodeData = {
    datasetId: DatasetId;
    useDatasetIdInput?: boolean;
};
export declare class LoadDatasetNodeImpl extends NodeImpl<LoadDatasetNode> {
    static create(): LoadDatasetNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    getEditors(): EditorDefinition<LoadDatasetNode>[] | Promise<EditorDefinition<LoadDatasetNode>[]>;
    process(inputs: Inputs, context: InternalProcessContext): Promise<Outputs>;
}
export declare const loadDatasetNode: import("../NodeDefinition.js").NodeDefinition<LoadDatasetNode>;
export {};
