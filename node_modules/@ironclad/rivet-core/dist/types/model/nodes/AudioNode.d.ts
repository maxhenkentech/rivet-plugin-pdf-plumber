import { type ChartNode, type NodeInputDefinition, type NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, type NodeUIData } from '../NodeImpl.js';
import { type DataRef, type EditorDefinition, type Inputs, type InternalProcessContext, type Outputs } from '../../index.js';
export type AudioNode = ChartNode<'audio', AudioNodeData>;
type AudioNodeData = {
    data?: DataRef;
    useDataInput: boolean;
};
export declare class AudioNodeImpl extends NodeImpl<AudioNode> {
    static create(): AudioNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    getEditors(): EditorDefinition<AudioNode>[];
    static getUIData(): NodeUIData;
    process(inputData: Inputs, context: InternalProcessContext): Promise<Outputs>;
}
export declare const audioNode: import("../NodeDefinition.js").NodeDefinition<AudioNode>;
export {};
