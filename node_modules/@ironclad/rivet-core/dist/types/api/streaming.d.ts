import { type NodeId, type Inputs, type Outputs, type GraphOutputs, type GraphProcessor } from '../index.js';
export type RivetEventStreamFilterSpec = {
    /** Stream partial output deltas for the specified node IDs or node titles. */
    partialOutputs?: string[] | true;
    /** Send the graph output when done? */
    done?: boolean;
    /** If the graph errors, send an error event? */
    error?: boolean;
    /** Stream node start events for the specified node IDs or node titles. */
    nodeStart?: string[] | true;
    /** Stream node finish events for the specified nodeIDs or node titles. */
    nodeFinish?: string[] | true;
};
/** Map of all possible event names to their data for streaming events. */
export type RivetEventStreamEvent = {
    /** Deltas for partial outputs. */
    partialOutput: {
        nodeId: NodeId;
        nodeTitle: string;
        delta: string;
    };
    nodeStart: {
        nodeId: NodeId;
        nodeTitle: string;
        inputs: Inputs;
    };
    nodeFinish: {
        nodeId: NodeId;
        nodeTitle: string;
        outputs: Outputs;
    };
    done: {
        graphOutput: GraphOutputs;
    };
    error: {
        error: string;
    };
};
export type RivetEventStreamEventInfo = {
    [P in keyof RivetEventStreamEvent]: {
        type: P;
    } & RivetEventStreamEvent[P];
}[keyof RivetEventStreamEvent];
/** A simplified way to listen and stream processor events, including filtering. */
export declare function getProcessorEvents(processor: GraphProcessor, spec: RivetEventStreamFilterSpec): AsyncGenerator<RivetEventStreamEventInfo, void>;
/**
 * Creates a ReadableStream for processor events, following the Server-Sent Events protocol.
 * https://developer.mozilla.org/en-US/docs/Web/API/EventSource
 *
 * Includes configuration for what events to send to the client, for example you can stream the partial output deltas
 * for specific nodes, and/or the graph output when done.
 */
export declare function getProcessorSSEStream(processor: GraphProcessor, 
/** The spec for what you're streaming to the client */
spec: RivetEventStreamFilterSpec): ReadableStream<Uint8Array>;
export declare function getSingleNodeStream(processor: GraphProcessor, nodeIdOrTitle: string): ReadableStream<string>;
